---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      imagePullSecrets:
      - name: "registrysecret"
      initContainers:
        - name: wait-postgre
          image: alpine:3.6
          command: ['/bin/sh', '-c', 'while ! getent ahostsv4 {{ pluck .Values.global.env .Values.app.postgresql.host | first | default .Values.app.postgresql.host._default }}; do sleep 1; done']
      containers:
      - name: basicapp
        command: ["node","/app/app.js"]
{{ tuple "basicapp" . | include "werf_container_image" | indent 8 }}
        workingDir: /app
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: "DEBUG"
          value: "{{ pluck .Values.global.env .Values.app.isDebug | first | default .Values.app.isDebug._default }}"
        - name: POSTGRESQL_LOGIN
          value: {{ pluck .Values.global.env .Values.app.postgresql.login | first | default .Values.app.postgresql.login._default | quote }}
        - name: POSTGRESQL_PASSWORD
          value: {{ pluck .Values.global.env .Values.app.postgresql.password | first | default .Values.app.postgresql.password._default | quote }}
        - name: POSTGRESQL_HOST
          value: {{ pluck .Values.global.env .Values.app.postgresql.host | first | default .Values.app.postgresql.host._default | quote }}
        - name: POSTGRESQL_PORT
          value: {{ pluck .Values.global.env .Values.app.postgresql.port | first | default .Values.app.postgresql.port._default | quote }}
        - name: POSTGRESQL_DATABASE
          value: {{ pluck .Values.global.env .Values.app.postgresql.db | first | default .Values.app.postgresql.db._default | quote }}
{{ tuple "basicapp" . | include "werf_container_env" | indent 8 }}
