variables:
  WERF_VERSION: "1.1 beta"

.base_deploy: &base_deploy
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - werf version
    - type werf && source <(werf ci-env gitlab --tagging-strategy stages-signature --verbose)
    - set -x
    - werf helm repo init
    - werf helm dependency update
    - werf deploy
      --timeout=300
      --stages-storage :local
      --env ${CI_ENVIRONMENT_CUSTOM_SLUG:-${CI_ENVIRONMENT_SLUG}}
  dependencies:
    - Build
  tags:
    - article-werf

stages:
  - build
  - test
  - deploy

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - werf version
    - type werf && source <(werf ci-env gitlab --tagging-strategy stages-signature --verbose)
    - werf build-and-publish
      --stages-storage :local
  except:
    - schedules
  tags:
    - article-werf

Run Tests:
  stage: test
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - werf version
    - type werf && source <(werf ci-env gitlab --tagging-strategy stages-signature --verbose)
    - werf run --stages-storage :local node -- npm run pretest
  except:
    - schedules
  tags:
    - article-werf
  needs: ["Build"]

Test:
  extends: .base_deploy
  stage: deploy
  environment:
    name: test
  except:
    - schedules
  #  - master
  only:
    - branches
  when: manual
  needs: ["Build","Run Tests"]

Stage (manual):
  extends: .base_deploy
  stage: deploy
  environment:
    name: stage
  except:
    - schedules
  only:
    - master
  when: manual
  needs: ["Build","Run Tests"]

Production (manual):
  extends: .base_deploy
  stage: deploy
  environment:
    name: production
  except:
    - schedules
  only:
    - tag
  when: manual
  needs: ["Build","Run Tests"]
